"succ" := \n.\f.\x.f(nfx)
"mult" := \m.\n.\f.\x.m(nf)x
"pred" := \n.\f.\x.(n(\g.\h.h(gf))(\u.x)(\u.u))
"add"  := \m.\n.\f.\x.mf(nfx)
"sub"  := \m.\n.n #pred m
0 := \f.\x.x
1 := #succ 0
2 := #succ 1
3 := #succ 2
4 := #succ 3
5 := #succ 4
6 := #succ 5
7 := #succ 6
8 := #succ 7
9 := #succ 8
"true" := \a.\b.a
"false" := \a.\b.b
"and" := \p.\q.pqp
"or" := \p.\q.ppq
"not" := \p.p "false" "true"
"xor" := \a.\b.a("not" b) b
"if" := \p.\a.\b.pab
"zero?" := \n.n(\x."false") "true"
S := \x.\y.\z.x z (y z)
K := \x.\y.x
I := \x.x
#compose := S (K S) K